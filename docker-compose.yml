version: '3.4'

services:
  web:
    build: .
    ports:
      - "127.0.0.1:8000:80"
    environment:
      DATABASE_URL: mysql://user:password@database:3306/symfony?serverVersion=8&charset=utf8mb4
    depends_on:
      database:
        condition: service_healthy
  database:
    image: mysql/mysql-server:8.0
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-prootpassword" ] # Command to check health.
      interval: 5s # Interval between health checks.
      timeout: 5s # Timeout for each health checking.
      retries: 20 # Hou many times retries.
      start_period: 10s
    #        container_name: database
    volumes:
      - ./database-setup.sh:/docker-entrypoint-initdb.d/setup.sh
      - db-data:/var/lib/mysql
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      # Password for root access
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db-data:
    name: database

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
